@page "/Create_test"

@using Shared.DB.Classes.Test.Task
@using Shared.Extensions
@rendermode InteractiveServer

<h3 class="text-center">Новый тест</h3>
  
@InteractionType.None.TaskTypeToString()

<div class="input-group input-group-lg" style="max-width: max-content">
    <span class="input-group-text" id="basic-addon1" ></span>
    <input type="text" class="form-control"  placeholder="Введите название" aria-label="Введите название" aria-describedby="basic-addon1">
</div>



<div class="container mt-5">
    @for (int i = 1; i <= @max; i++)
    {

        <div class="d-flex justify-content-center row">
            <div class="card mb-3" style="border-radius: 5px  ; border-color: #00003A; background-color: #EFF4FF; -webkit-text-fill-color: #00003A;">
                <div class="col-md-10 col-lg-10">

                    <div class="d-flex flex-row justify-content-between  align-items-center mcq">
                        <h4 >Задание @i</h4><span>(@i of @max)</span>
                    </div>
                </div >
                <div class="question p-3 border-bottom">
                    int j;
                    <div class="input-group input-group-lg" style="max-width: max-content">
                        <span class="input-group-text" id="basic-addon1"></span>
                        <input type="text" class="form-control" placeholder="Введите задание" aria-label="Введите задание" aria-describedby="basic-addon1">
                    </div>
                    @for (int j = 1; j <= 4; j++)
                    {
                        <div class="ans ml-2">
                            <label class="radio">
                                <input type="radio" name="answer-@i" value="@j"> <span>@j</span>
                            </label>
                        </div>
                    }
                    <div class="d-flex justify-content-end">
                        <button class="btn btn-outline-primary" style="border-radius: .5rem; border-color: #00003A; background-color: #EFF4FF; --bs-btn-color: #00003A; height: 40px;" type="button" >+ </button>
                    </div>

                </div>
            </div>

        </div>
    }
    <div class="d-flex justify-content-end">
        <button class="btn btn-outline-primary" style="border-radius: .5rem; border-color: #00003A; background-color: #EFF4FF; --bs-btn-color: #00003A; height: 40px;" type="button" @onclick="cringe"> + @max </button>
    </div>
    
    <div class="dropdown">
      <a class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        +
      </a>
    
      <ul class="dropdown-menu">
          <li><a class="dropdown-item" @onclick="sss">@InteractionType.ShortStringTask.TaskTypeToString()</a></li>
          <li><a class="dropdown-item" href="#">@InteractionType.LongStringTask.TaskTypeToString()</a></li>
          <li><a class="dropdown-item" href="#">@InteractionType.OneVariantTask.TaskTypeToString()</a></li>
          <li><a class="dropdown-item" href="#">@InteractionType.ManyVariantsTask.TaskTypeToString()</a></li>
          <li><a class="dropdown-item" href="#">@InteractionType.SqlQueryTask.TaskTypeToString()</a></li>
      </ul>
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md-start" style="height: 40px; -webkit-text-fill-color: #00003A">
        <button class="btn btn-outline-primary" style="border-radius: .5rem; border-color: #00003A; background-color: #EFF4FF; --bs-btn-color: #00003A; height: 40px;" type="button">Сохранить</button>
    </div>
</div>



@code {
    
    string task2 = "Как правильно разводить водицу?";
    string task1 = "Вилкой раз или в жопу раз?";
    string task3 = "Что делать, если твой друг нарик?";
    int max = 1;
    List<String> fruits = ["Яблоко", "Банан", "Апельсин"];
    
    private void cringe()
    {
        max++;
        InvokeAsync(StateHasChanged);
    }
    
    private void cringe1(int j)
    {
        j++;
        InvokeAsync(StateHasChanged);
    }
    
    private void sss()
    {
        int m;
    }
}