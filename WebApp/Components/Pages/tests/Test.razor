@page "/test/{test_id}"
@using WebApp.Services
@using WebApp.Components.Tasks_Components

@using MyTest = Shared.DB.Classes.Test.Test;
@using FinishedTest = Shared.DB.Classes.Test.Task.TaskAnswer.TestAnswer;

@using Shared.DB.Classes.Test.Task
@using Task = System.Threading.Tasks.Task

@inject ApiService _ApiService
@rendermode InteractiveServer



<h3 class="text-center" style="-webkit-text-fill-color: #00003A;">Тест: @test.TestName</h3>

@for (int i = 0; i < test.Tasks.Count; i++)
{
    switch (test.Tasks[i].InteractionType)
        {
            case InteractionType.LongStringTask:
                <LongStringTask number="@(i+1)" task="@test.Tasks[i]"></LongStringTask>
                break;
            case InteractionType.ShortStringTask:
                <ShortStringTask number="@(i+1)" task="@test.Tasks[i]"></ShortStringTask>
                break;
            case InteractionType.ManyVariantsTask:
                <ManyVariantsTask number="@(i+1)" task="@test.Tasks[i]"></ManyVariantsTask>
                break;
            case InteractionType.OneVariantTask:
                <OneVariantTask number="@(i+1)" task="@test.Tasks[i]"></OneVariantTask>
                break;
        }
}

<div class="d-grid gap-2 d-md-flex justify-content-md-start" style="height: 40px; -webkit-text-fill-color: #00003A; box-shadow: none;">
        <button class="btn btn-outline-primary" @onclick="SaveAndSubmit" style="border-radius: .5rem; border-color: #00003A; background-color: #EFF4FF; --bs-btn-color: #00003A; height: 40px; box-shadow: none;" type="button">
            Сохранить
        </button>
    </div>


@code {
    public ManyVariantsTask mvTask;
    [Parameter]
    public string test_id { get; set; }

    MyTest test = new MyTest();
    FinishedTest finTest = new FinishedTest();
    

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        test = await _ApiService.GetTest(test_id);

        await InvokeAsync(StateHasChanged);
        
        
    }

    private void SaveAndSubmit()
    {

        foreach (var task in test.Tasks)
        {
            
        }
        
    }

}