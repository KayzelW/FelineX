@page "/test/{test_id}"
@using WebApp.Services
@using WebApp.Components.Tasks_Components
@using MyTask = Shared.DB.Classes.Test.Task.Task;
@using MyTest = Shared.DB.Classes.Test.Test;

@inject ApiService _ApiService

    <h3 class="text-center" style="-webkit-text-fill-color: #00003A;">Тест: @test.TestName</h3>


@* <div class="container mt-5"> *@
    @* <div class="d-flex justify-content-center row"> *@
    @*     <div class="card mb-3" style="border-radius: 5px  ; border-color: #00003A; background-color: #EFF4FF; -webkit-text-fill-color: #00003A;"> *@
    @*         <div class="col-md-10 col-lg-10"> *@
    @* *@
    @*             <div class="d-flex flex-row justify-content-between  align-items-center mcq"> *@
    @*                 <h4 >Задание </h4> *@
    @*             </div> *@
    @*         </div> *@
    @*         <div class="question p-3 border-bottom"> *@
    @*             <div class="d-flex flex-row align-items-center question-title"> *@
    @*                 <h5 class="mt-1">"dfgsdfg"</h5> *@
    @*             </div> *@
    @*             @for (int j = 1; j <= 4; j++) *@
    @*             { *@
    @*                 <div class="ans ml-2"> *@
    @*                     <label class="radio"> *@
    @*                         <input type="radio" name="answer-1" value="@j"> <span>@j</span> *@
    @*                     </label> *@
    @*                 </div> *@
    @*             } *@
    @* *@
    @*         </div> *@
    @*     </div> *@
    @* </div> *@

    <div class="d-flex justify-content-center row">
        <div class="card mb-3" style="border-radius: 5px  ; border-color: #00003A; background-color: #EFF4FF; -webkit-text-fill-color: #00003A;">
            <div class="col-md-10 col-lg-10">

                <div class="d-flex flex-row justify-content-between  align-items-center mcq">
                    <h4 >Задание 1</h4>
                </div>
            </div>
            <div class="question p-3 border-bottom">
                <div class="d-flex flex-row align-items-center question-title">
                    <h5 class="mt-1 ml-2"> 132456</h5>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                    <label class="form-check-label" for="defaultCheck1">
                        Default checkbox
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="defaultCheck1">
                    <label class="form-check-label" for="defaultCheck1">
                        Default checkbox
                    </label>
                </div>
            </div>
        </div>
    </div>
@* *@
@* @for (int i = 0; i < test.Tasks.Count; i++) *@
@* { *@
@*     <ShortStringTask number="@i" question="@test.Tasks[i].Question"></ShortStringTask>  *@
@* } *@
@* *@
@* *@
@*     <div class="d-flex justify-content-center row"> *@
@*         <div class="card mb-3" style="border-radius: 5px  ; border-color: #00003A; background-color: #EFF4FF; -webkit-text-fill-color: #00003A;"> *@
@*             <div class="col-md-10 col-lg-10"> *@
@*                 <div class="d-flex flex-row justify-content-between  align-items-center mcq"> *@
@*                     <h4 >Задание @i</h4><span>(@i of @max)</span> *@
@*                 </div> *@
@*                 <div class="question p-3 border-bottom"> *@
@*                     <div class="d-flex flex-row align-items-center question-title"> *@
@*                         <h5 class="mt-1 ml-2">@task3</h5> *@
@*                     </div> *@
@*      *@
@*                     <div class="form-floating"> *@
@*                         <textarea class="form-control"  id="floatingTextarea2" style="height: 100px"></textarea> *@
@*                         <label for="floatingTextarea2"></label> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@

@code {
    [Parameter]
    public string test_id { get; set; }

    MyTest test = new MyTest();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        
        test = await _ApiService.GetTest(test_id);

        await InvokeAsync(StateHasChanged);
        
        
    }

}