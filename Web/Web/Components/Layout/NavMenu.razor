@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="Game">
            <img cass="img-fluid my-5 logo" src="images/website-logo.png" style="max-height: 40px" alt=""/>
            FelineX
        </a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <div class="nav-item px-3">
            <AuthorizeView>
                <Authorized>
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>

                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span>
                        Профиль: @context.User.Identity?.Name
                    </NavLink>
                    <NavLink class="nav-link" href="Test/My">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>
                        Мои тесты
                    </NavLink>

                    @if (context.User.IsInRole("Teacher") || context.User.IsInRole("Admin"))
                    {
                        <NavLink class="nav-link" href="Group/My">
                            <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span>
                            Группы
                        </NavLink>
                    }

                    <div class="nav-item px-3">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken/>
                            <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                            <button type="submit" class="nav-link">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                            </button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Login">
                            <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}

